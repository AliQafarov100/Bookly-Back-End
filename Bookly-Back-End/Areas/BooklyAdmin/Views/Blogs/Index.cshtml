@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<Bookly_Back_End.Models.Blog>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubTitle)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="~/assets/Image/Blog/@Html.DisplayFor(modelItem => item.Photo)" style="width: 100%;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubTitle)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success"><i class="mdi mdi-database-edit"></i></a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary"><i class="mdi mdi-details"></i></a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="mdi mdi-delete"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), new X.PagedList.Web.Common.PagedListRenderOptionsBase
{
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" }
})